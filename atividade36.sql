
UPDATE DEBITOS a 
SET SITUACAO_DEBITO = 'Atrasado'
WHERE DATAVENCIMENTO < CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('Negociado', 'Pago');

SELECT * FROM DEBITOS d 
WHERE DATAVENCIMENTO < CURRENT_DATE
AND  situacao_debito NOT IN ('negociado', 'pago');

/*2*/
UPDATE DEBITOS 
SET SITUACAO_DEBITO = 'Pedente'
WHERE DATAVENCIMENTO > CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('pago');

SELECT * FROM DEBITOS d 
SET DATAVENCIMENTO = CURRENT_DATE
AND SITUACAO_DEBITO NOT IN ('pago');

/*3*/
UPDATE DEBITOS d 
SET DATAVENCIMENTO = DATEADD(-5 YEAR TO DATAVENCIMENTO) 
where SITUACAO_DEBITO IN ('Negociado');

SELECT * FROM DEBITOS d
WHERE SITUACAO_DEBITO IN ('Negociado');

/*4*/
SELECT p.nome, p.email, p.telefone,
FROM pessoa p 

/*5*/
SELECT * FROM produto p
WHERE PRECO_UNITARIO > 100

/*6*/
SELECT * FROM VENDA v 
WHERE v.DATA_VENDA BETWEEN '2014-10-22' AND '2022-05-04'

/*7*/
SELECT p.nome, p.data_nascimento, (CURRENT_DATE - p.data_nascimento) FROM FORNECEDOR f 
LEFT JOIN PESSOA p ON p.ID_PESSOA = f.ID_FORNECEDOR 
WHERE f.ID_FORNECEDOR IN (SELECT ID_FORNECEDOR FROM PRODUTO p2 WHERE quantidade_estoque IS NULL)

/*8*/
SELECT p.NOME, p.EMAIL, p.TELEFONE, d.DATAVENCIMENTO, d.SITUACAO_DEBITO
FROM cliente c
INNER JOIN pessoa p ON c.ID_PESSOA = p.ID_PESSOA 
LEFT JOIN DEBITOS d ON c.ID_CLIENTE = d.ID_CLIENTE 
ORDER BY p.NOME;

/*11*/
UPDATE PRODUTO p
SET PRECO_UNITARIO = PRECO_UNITARIO + (PRECO_UNITARIO * 10)
WHERE p.QUANTIDADE_ESTOQUE < 10 

SELECT * FROM PRODUTO p 
WHERE p.QUANTIDADE_ESTOQUE 

/*13*/
UPDATE DEBITOS D
SET SITUACAO_DEBITO = 'pago'
WHERE D.SITUACAO_DEBITO NOT IN ('atrasado')

SELECT *FROM DEBITOS d 
WHERE d.SITUACAO_DEBITO IN ('atrasado')


/*15*/
SELECT *
FROM VENDA 
WHERE DATA_VENDA BETWEEN '2023-12-01' AND '2024-01-31'

/*16*/ 
SELECT *
FROM PRODUTO 
WHERE QUANTIDADE_ESTOQUE BETWEEN 5 AND 20;


/* 17 EX */
SELECT *
FROM PESSOA
WHERE NOME LIKE 'A%';h 

/* 18 EX */
SELECT P.NOME
FROM PRODUTO P
LEFT JOIN ITENSVENDA IV ON P.ID_PRODUTO = IV.ID_PRODUTO
WHERE IV.ID_PRODUTO IS NULL;



/* 19 EX */
SELECT p.NOME AS Produto, v.DATA_VENDA, c.ID_PESSOA AS Cliente
FROM VENDA v
INNER JOIN CLIENTE c ON v.ID_PESSOA = c.ID_PESSOA
INNER JOIN PRODUTO p ON v.ID_VENDA = p.ID_PRODUTO
WHERE c.ID_PESSOA IN ('Carla Souza', 'Larissa Ferreira');


/* 20 EX */
SELECT
p.NOME,
IF(c.ID_CLIENTE IS NOT NULL AND f.ID_FORNECEDOR IS NOT NULL, 'Cliente e Fornecedor',
IF(c.ID_CLIENTE IS NOT NULL, 'Cliente', 'Fornecedor')) AS TIPO
FROM
PESSOA p
LEFT JOIN
CLIENTE c ON p.ID_PESSOA = c.ID_PESSOA
LEFT JOIN
FORNECEDOR f ON p.ID_PESSOA = f.ID_PESSOA
WHERE
c.ID_CLIENTE IS NOT NULL OR f.ID_FORNECEDOR IS NOT NULL;


/*21*/
  SELECT V.*, C.*, FP.DESCRICAO AS FORMA_PAGAMENTO
FROM VENDA V
JOIN CLIENTE C ON V.ID_PESSOA = C.ID_PESSOA
JOIN FORMA_PAGAMENTO FP ON V.ID_FORMA_PAGAMENTO = FP.ID_FORMA_PAGAMENTO;

/*22*/
SELECT V.*, IV.*, P.*
FROM VENDA V
JOIN ITENSVENDA IV ON V.ID_VENDA = IV.ID_VENDA
JOIN PRODUTO P ON IV.ID_PRODUTO = P.ID_PRODUTO
WHERE P.NOME = 'Placa de Captura';

/*24*/
SELECT L.NOME AS NOME_LOGRADOURO,
       B.NOME AS NOME_BAIRRO,
       'PERTENCE A UMA PESSOA' AS STATUS
FROM LOGRADOURO L
JOIN BAIRRO B ON L.ID_BAIRRO = B.ID_BAIRRO
JOIN ENDERECO E ON L.ID_LOGRADOURO = E.ID_LOGRADOURO
WHERE E.ID_PESSOA IS NOT NULL

UNION ALL

SELECT L.NOME AS NOME_LOGRADOURO,
       B.NOME AS NOME_BAIRRO,
       'NÃƒO PERTENCE A NENHUMA PESSOA' AS STATUS
FROM LOGRADOURO L
JOIN BAIRRO B ON L.ID_BAIRRO = B.ID_BAIRRO
LEFT JOIN ENDERECO E ON L.ID_LOGRADOURO = E.ID_LOGRADOURO
WHERE E.ID_PESSOA IS NULL;

/*25*/
SELECT P.*
FROM PRODUTO P
WHERE P.PRECO_UNITARIO > (SELECT AVG(P2.PRECO_UNITARIO) FROM PRODUTO P2);

/*26*/
SELECT DISTINCT C.* p.PESSOA
FROM CLIENTE C
JOIN VENDA V ON C.ID_PESSOA = V.ID_PESSOA
JOIN ENDERECO E ON E.ID_PESSOA = C.ID_PESSOA
JOIN MUNICIPIO M ON E.ID_MUNICIPIO = M.ID_MUNICIPIO
WHERE M.POPULACAO > 1000000;

/*27*/
SELECT F.ID_FORNECEDOR,
       P.NOME AS NOME_FORNECEDOR,
       SUM(IV.QUANTIDADE) AS TOTAL_PRODUTOS_VENDIDOS
FROM FORNECEDOR F
JOIN PRODUTO P ON F.ID_FORNECEDOR = P.ID_FORNECEDOR
JOIN ITENSVENDA IV ON P.ID_PRODUTO = IV.ID_PRODUTO
GROUP BY F.ID_FORNECEDOR, P.NOME;

/*28*/
SELECT C.ID_CLIENTE,
       PE.NOME AS NOME_CLIENTE
FROM CLIENTE C
JOIN HISTORICO_COMPRAS_CLIENTE HCC ON C.ID_CLIENTE = HCC.ID_CLIENTE
JOIN PESSOA PE ON C.ID_PESSOA = PE.ID_PESSOA
WHERE HCC.VALOR_TOTAL > 500
GROUP BY C.ID_CLIENTE, PE.NOME;

/*29*/
SELECT PE.ID_PESSOA,
       PE.NOME,
       E.NUMERO,
       E.COMPLEMENTO,
       E.TIPO_ENDERECO
FROM PESSOA PE
LEFT JOIN ENDERECO E ON PE.ID_PESSOA = E.ID_PESSOA;

/*30*/
SELECT P.ID_PRODUTO,
       P.NOME AS NOME_PRODUTO,
       P.PRECO_UNITARIO,
       PE.NOME AS NOME_FORNECEDOR
FROM PRODUTO P
LEFT JOIN FORNECEDOR F ON P.ID_FORNECEDOR = F.ID_FORNECEDOR
LEFT JOIN PESSOA PE ON F.ID_PESSOA = PE.ID_PESSOA;

/*31*/
SELECT P.ID_PRODUTO,
       P.NOME AS NOME_PRODUTO,
       P.QUANTIDADE_ESTOQUE
FROM PRODUTO P
ORDER BY P.QUANTIDADE_ESTOQUE DESC;


/*32*/

SELECT V.ID_VENDA,
       V.VALOR_TOTAL
FROM VENDA V
ORDER BY V.VALOR_TOTAL ASC ;

/*33*/
SELECT P.ID_PRODUTO,
       P.NOME AS NOME_PRODUTO,
       P.QUANTIDADE_ESTOQUE
FROM PRODUTO P
WHERE P.QUANTIDADE_ESTOQUE < (SELECT AVG(QUANTIDADE_ESTOQUE) FROM PRODUTO);

/*34*/
SELECT PE1.ID_PESSOA,
       PE1.NOME AS NOME_PESSOA,
       PE1.TELEFONE
FROM PESSOA PE1
JOIN PESSOA PE2 ON PE1.TELEFONE = PE2.TELEFONE AND PE1.ID_PESSOA != PE2.ID_PESSOA;

/*36*/
SELECT V.ID_VENDA,
       V.VALOR_TOTAL,
       D.SITUACAO_DEBITO
FROM VENDA V
JOIN DEBITOS D ON V.ID_VENDA = D.ID_VENDA
WHERE D.SITUACAO_DEBITO = 'Negociado';

